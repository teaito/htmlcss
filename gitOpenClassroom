tout en console:
mkdir monPremierRepo
#créer le dossier du repository
#créer ou mettre un fichier dans ce dossier

git init
#Pour activer un dossier comme repository Git

git add . 
#pour ajouter tous les fichiers du repository à l'index de git
#ou alors faire juste: git add nomDuFichier.txt

git commit -m "message qui décrit le commit"
#enregistre une étape de modification du repository avec un message en description

git log
#pour voir la liste de tous les commit

git commit -a -m "message qui décrit la mise à jour"
#enregistre un commit où aucun nouveau fichier n'a été ajouté, seuls les fichiers existants ont été modifiés

git checkout SHADuCommit
#pour revenir en arrière sur un commit précis

git checkout master
#pour revenir sur l'état actuel

git commit --amend -m "Votre nouveau message"
#pour modifier le message d'un commit

git reset --hard‌
#pour annuler tous les changements avant d'avoir fait un commit

git clone lienFourniParGitHub 
#pour récupérer sur son ordi un repository hébergé sur github

git push origin master
#pour synchroniser les modifications que vous faites dans votre repo sur votre machine avec votre repo sur GitHub

git branch
#Pour voir les branches présentes dans votre repo

git branch nom_dela_branche
#pour créer une nouvelle branche

git checkout nom_dela_branche
#pour se placer dans la nouvelle branche

git checkout -b nom_dela_branche
#pour créer une branche et se placer (gagne du temps)

git checkout brancheA
git merge brancheB
#pour fusionner la brancheB dans la brancheA

git checkout master
git merge brancheB
#pour fusionner la brancheB avec le projet principal

git commit
#pour indiquer à git que les conflits ont été réglé après une fusion

git mergetool tortoisemerge
#pour utiliser un outil externe (tortoisemerge) pour résoudre des conflits

git blame nomdufichier.txt
#pour voir toutes les modifications faites sur un fichier

